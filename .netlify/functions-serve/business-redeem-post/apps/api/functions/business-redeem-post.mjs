
import {createRequire as ___nfyCreateRequire} from "module";
import {fileURLToPath as ___nfyFileURLToPath} from "url";
import {dirname as ___nfyPathDirname} from "path";
let __filename=___nfyFileURLToPath(import.meta.url);
let __dirname=___nfyPathDirname(___nfyFileURLToPath(import.meta.url));
let require=___nfyCreateRequire(import.meta.url);


// packages/shared/supabaseClient.ts
import { createClient } from "@supabase/supabase-js";
function readEnv(name) {
  try {
    if (typeof Netlify !== "undefined" && Netlify?.env?.get) {
      const v = Netlify.env.get(name);
      if (v)
        return v;
    }
  } catch {
  }
  return globalThis?.process?.env?.[name];
}
function createSupabaseClient(useServiceRole = false) {
  const url = readEnv("SUPABASE_URL");
  const anon = readEnv("SUPABASE_ANON_KEY");
  const service = readEnv("SUPABASE_SERVICE_ROLE_KEY");
  if (!url || !anon && !service) {
    throw new Error("Supabase env vars not set (SUPABASE_URL and key).");
  }
  const key = useServiceRole && service ? service : anon;
  return createClient(url, key, {
    auth: { persistSession: false }
  });
}

// apps/api/functions/business-redeem-post.ts
var business_redeem_post_default = async (req) => {
  if (req.method !== "POST")
    return new Response("Method Not Allowed", { status: 405 });
  const url = new URL(req.url);
  const parts = url.pathname.split("/");
  const businessId = parts[3] || "";
  try {
    const body = await req.json();
    const { unique_code } = body || {};
    if (!businessId || typeof unique_code !== "string") {
      return new Response(JSON.stringify({ ok: false, error: "Invalid payload" }), { status: 400 });
    }
    const supabase = createSupabaseClient(true);
    const { data: uc, error: ucErr } = await supabase.from("user_coupons").select("id, coupon_id, is_redeemed").eq("unique_code", unique_code).maybeSingle();
    if (ucErr || !uc)
      return new Response(JSON.stringify({ ok: false, error: "Coupon not found" }), { status: 404 });
    if (uc.is_redeemed)
      return new Response(JSON.stringify({ ok: false, error: "Already redeemed" }), { status: 409 });
    const { data: coupon, error: cErr } = await supabase.from("coupons").select("business_id").eq("id", uc.coupon_id).single();
    if (cErr || !coupon || coupon.business_id !== businessId)
      return new Response(JSON.stringify({ ok: false, error: "Business mismatch" }), { status: 403 });
    const { error: upd } = await supabase.from("user_coupons").update({ is_redeemed: true, redeemed_at: (/* @__PURE__ */ new Date()).toISOString() }).eq("id", uc.id);
    if (upd)
      return new Response(JSON.stringify({ ok: false, error: upd.message }), { status: 500 });
    return new Response(JSON.stringify({ ok: true }), { headers: { "Content-Type": "application/json" } });
  } catch (e) {
    return new Response(JSON.stringify({ ok: false, error: e?.message || "Bad Request" }), { status: 400 });
  }
};
var config = {
  path: "/api/business/:businessId/redeem"
};
export {
  config,
  business_redeem_post_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsicGFja2FnZXMvc2hhcmVkL3N1cGFiYXNlQ2xpZW50LnRzIiwgImFwcHMvYXBpL2Z1bmN0aW9ucy9idXNpbmVzcy1yZWRlZW0tcG9zdC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLy8gU3VwYWJhc2UgY2xpZW50IGZhY3RvcnlcclxuLy8gUmVhZHMgZW52IGZyb20gTmV0bGlmeSAoTmV0bGlmeS5lbnYpIGlmIGF2YWlsYWJsZSwgb3RoZXJ3aXNlIHByb2Nlc3MuZW52XHJcblxyXG5pbXBvcnQgdHlwZSB7IFN1cGFiYXNlQ2xpZW50IGFzIFN1cGFiYXNlSnNDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xyXG5pbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xyXG5cclxuZnVuY3Rpb24gcmVhZEVudihuYW1lOiBzdHJpbmcpOiBzdHJpbmcgfCB1bmRlZmluZWQge1xyXG4gIHRyeSB7XHJcbiAgICAvLyBAdHMtaWdub3JlIC0gTmV0bGlmeSBnbG9iYWwgbWF5IGV4aXN0IGF0IHJ1bnRpbWVcclxuICAgIGlmICh0eXBlb2YgTmV0bGlmeSAhPT0gJ3VuZGVmaW5lZCcgJiYgTmV0bGlmeT8uZW52Py5nZXQpIHtcclxuICAgICAgLy8gQHRzLWlnbm9yZVxyXG4gICAgICBjb25zdCB2ID0gTmV0bGlmeS5lbnYuZ2V0KG5hbWUpO1xyXG4gICAgICBpZiAodikgcmV0dXJuIHYgYXMgc3RyaW5nO1xyXG4gICAgfVxyXG4gIH0gY2F0Y2gge31cclxuICAvLyBGYWxsYmFja1xyXG4gIC8vIEB0cy1pZ25vcmVcclxuICByZXR1cm4gKGdsb2JhbFRoaXMgYXMgYW55KT8ucHJvY2Vzcz8uZW52Py5bbmFtZV0gYXMgc3RyaW5nIHwgdW5kZWZpbmVkO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3VwYWJhc2VDbGllbnQodXNlU2VydmljZVJvbGUgPSBmYWxzZSk6IFN1cGFiYXNlSnNDbGllbnQge1xyXG4gIGNvbnN0IHVybCA9IHJlYWRFbnYoJ1NVUEFCQVNFX1VSTCcpO1xyXG4gIGNvbnN0IGFub24gPSByZWFkRW52KCdTVVBBQkFTRV9BTk9OX0tFWScpO1xyXG4gIGNvbnN0IHNlcnZpY2UgPSByZWFkRW52KCdTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZJyk7XHJcbiAgaWYgKCF1cmwgfHwgKCFhbm9uICYmICFzZXJ2aWNlKSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdTdXBhYmFzZSBlbnYgdmFycyBub3Qgc2V0IChTVVBBQkFTRV9VUkwgYW5kIGtleSkuJyk7XHJcbiAgfVxyXG4gIGNvbnN0IGtleSA9IHVzZVNlcnZpY2VSb2xlICYmIHNlcnZpY2UgPyBzZXJ2aWNlIDogKGFub24gYXMgc3RyaW5nKTtcclxuICByZXR1cm4gY3JlYXRlQ2xpZW50KHVybCwga2V5LCB7XHJcbiAgICBhdXRoOiB7IHBlcnNpc3RTZXNzaW9uOiBmYWxzZSB9LFxyXG4gIH0pO1xyXG59XHJcbiIsICJpbXBvcnQgeyBjcmVhdGVTdXBhYmFzZUNsaWVudCB9IGZyb20gJy4uLy4uLy4uL3BhY2thZ2VzL3NoYXJlZC9zdXBhYmFzZUNsaWVudCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyAocmVxOiBSZXF1ZXN0KSA9PiB7XHJcbiAgaWYgKHJlcS5tZXRob2QgIT09ICdQT1NUJykgcmV0dXJuIG5ldyBSZXNwb25zZSgnTWV0aG9kIE5vdCBBbGxvd2VkJywgeyBzdGF0dXM6IDQwNSB9KTtcclxuICBjb25zdCB1cmwgPSBuZXcgVVJMKHJlcS51cmwpO1xyXG4gIGNvbnN0IHBhcnRzID0gdXJsLnBhdGhuYW1lLnNwbGl0KCcvJyk7XHJcbiAgY29uc3QgYnVzaW5lc3NJZCA9IHBhcnRzWzNdIHx8ICcnO1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxLmpzb24oKTtcclxuICAgIGNvbnN0IHsgdW5pcXVlX2NvZGUgfSA9IGJvZHkgfHwge307XHJcbiAgICBpZiAoIWJ1c2luZXNzSWQgfHwgdHlwZW9mIHVuaXF1ZV9jb2RlICE9PSAnc3RyaW5nJykge1xyXG4gICAgICByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgb2s6IGZhbHNlLCBlcnJvcjogJ0ludmFsaWQgcGF5bG9hZCcgfSksIHsgc3RhdHVzOiA0MDAgfSk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZVN1cGFiYXNlQ2xpZW50KHRydWUpO1xyXG4gICAgY29uc3QgeyBkYXRhOiB1YywgZXJyb3I6IHVjRXJyIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAuZnJvbSgndXNlcl9jb3Vwb25zJylcclxuICAgICAgLnNlbGVjdCgnaWQsIGNvdXBvbl9pZCwgaXNfcmVkZWVtZWQnKVxyXG4gICAgICAuZXEoJ3VuaXF1ZV9jb2RlJywgdW5pcXVlX2NvZGUpXHJcbiAgICAgIC5tYXliZVNpbmdsZSgpO1xyXG4gICAgaWYgKHVjRXJyIHx8ICF1YykgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IG9rOiBmYWxzZSwgZXJyb3I6ICdDb3Vwb24gbm90IGZvdW5kJyB9KSwgeyBzdGF0dXM6IDQwNCB9KTtcclxuICAgIGlmICh1Yy5pc19yZWRlZW1lZCkgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IG9rOiBmYWxzZSwgZXJyb3I6ICdBbHJlYWR5IHJlZGVlbWVkJyB9KSwgeyBzdGF0dXM6IDQwOSB9KTtcclxuXHJcbiAgICBjb25zdCB7IGRhdGE6IGNvdXBvbiwgZXJyb3I6IGNFcnIgfSA9IGF3YWl0IHN1cGFiYXNlXHJcbiAgICAgIC5mcm9tKCdjb3Vwb25zJylcclxuICAgICAgLnNlbGVjdCgnYnVzaW5lc3NfaWQnKVxyXG4gICAgICAuZXEoJ2lkJywgdWMuY291cG9uX2lkKVxyXG4gICAgICAuc2luZ2xlKCk7XHJcbiAgICBpZiAoY0VyciB8fCAhY291cG9uIHx8IGNvdXBvbi5idXNpbmVzc19pZCAhPT0gYnVzaW5lc3NJZClcclxuICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IG9rOiBmYWxzZSwgZXJyb3I6ICdCdXNpbmVzcyBtaXNtYXRjaCcgfSksIHsgc3RhdHVzOiA0MDMgfSk7XHJcblxyXG4gICAgY29uc3QgeyBlcnJvcjogdXBkIH0gPSBhd2FpdCBzdXBhYmFzZVxyXG4gICAgICAuZnJvbSgndXNlcl9jb3Vwb25zJylcclxuICAgICAgLnVwZGF0ZSh7IGlzX3JlZGVlbWVkOiB0cnVlLCByZWRlZW1lZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpIH0pXHJcbiAgICAgIC5lcSgnaWQnLCB1Yy5pZCk7XHJcbiAgICBpZiAodXBkKSByZXR1cm4gbmV3IFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KHsgb2s6IGZhbHNlLCBlcnJvcjogdXBkLm1lc3NhZ2UgfSksIHsgc3RhdHVzOiA1MDAgfSk7XHJcblxyXG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IG9rOiB0cnVlIH0pLCB7IGhlYWRlcnM6IHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9IH0pO1xyXG4gIH0gY2F0Y2ggKGU6IGFueSkge1xyXG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShKU09OLnN0cmluZ2lmeSh7IG9rOiBmYWxzZSwgZXJyb3I6IGU/Lm1lc3NhZ2UgfHwgJ0JhZCBSZXF1ZXN0JyB9KSwgeyBzdGF0dXM6IDQwMCB9KTtcclxuICB9XHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xyXG4gIHBhdGg6ICcvYXBpL2J1c2luZXNzLzpidXNpbmVzc0lkL3JlZGVlbScsXHJcbn07XHJcbiJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7QUFJQSxTQUFTLG9CQUFvQjtBQUU3QixTQUFTLFFBQVEsTUFBa0M7QUFDakQsTUFBSTtBQUVGLFFBQUksT0FBTyxZQUFZLGVBQWUsU0FBUyxLQUFLLEtBQUs7QUFFdkQsWUFBTSxJQUFJLFFBQVEsSUFBSSxJQUFJ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
