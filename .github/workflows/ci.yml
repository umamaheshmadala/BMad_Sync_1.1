name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * *'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Dependency audit (non-blocking)
        run: npm audit --audit-level=high || true
      - name: Typecheck
        run: npx tsc -p tsconfig.json --noEmit
      - name: Run tests
        run: npm test
      - name: Build web
        run: npm run build:web
      - name: Lint OpenAPI spec
        run: npx --yes @redocly/cli@latest lint docs/api/openapi.yaml
      - name: Lighthouse CI (non-blocking)
        run: npm run lhci || true
      - name: Bundle size check (non-blocking)
        run: npm run size-limit || true

  openapi-validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint OpenAPI with Redocly
        run: npx --yes @redocly/cli@latest lint docs/api/openapi.yaml

  advisors:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run advisors (non-blocking)
        run: node scripts/advisors.mjs || true
        env:
          SUPABASE_PAT: ${{ secrets.SUPABASE_PAT }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
          STRICT_ADVISORS: ${{ vars.STRICT_ADVISORS }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  explain:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Run EXPLAIN baselines (non-blocking)
        run: |
          if [ -z "${{ secrets.SUPABASE_URL }}" ] || [ -z "${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}" ]; then echo "Skipping EXPLAIN (secrets missing)"; exit 0; fi
          node scripts/explain.mjs || true
        env:
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          EXPLAIN_MAX_ROWS: ${{ vars.EXPLAIN_MAX_ROWS }}
          EXPLAIN_STRICT: ${{ vars.EXPLAIN_STRICT }}

  preview-smoke:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    strategy:
      matrix:
        locale: [en, es, fr, pt, de, it]
    steps:
      - name: Smoke against preview URL (${{ matrix.locale }})
        env:
          BASE_URL: ${{ vars.DEPLOYED_BASE_URL }}
          ACCEPT_LANGUAGE: ${{ matrix.locale }}
          TOKEN: ${{ secrets.OWNER_BEARER }}
        run: |
          if [ -z "$BASE_URL" ]; then echo "Skipping smoke (DEPLOYED_BASE_URL not set)"; exit 0; fi
          echo "BASE_URL=$BASE_URL  ACCEPT_LANGUAGE=${ACCEPT_LANGUAGE}"
          node scripts/smoke.mjs
      - name: Upload smoke artifacts (${{ matrix.locale }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-samples-${{ matrix.locale }}
          path: |
            smoke-samples/**
          if-no-files-found: ignore

  e2e-preview:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Install Playwright
        run: npm run e2e:install
      - name: Run E2E (non-blocking)
        continue-on-error: ${{ vars.E2E_ALLOW_FAILURE != 'false' }}
        run: npm run e2e
        env:
          BASE_URL: ${{ vars.DEPLOYED_BASE_URL }}
          OWNER_BEARER: ${{ secrets.OWNER_BEARER }}
      - name: Upload E2E artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-artifacts
          path: e2e-artifacts/**
          if-no-files-found: ignore

  a11y-axe:
    needs: [build-and-test]
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && vars.AXE_CI == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - run: npm ci
      - name: Install Playwright
        run: npm run e2e:install
      - name: Run Axe against preview URL
        continue-on-error: ${{ vars.A11Y_FAIL != 'true' }}
        run: |
          if [ -z "${{ vars.DEPLOYED_BASE_URL }}" ]; then echo "Skipping Axe (DEPLOYED_BASE_URL not set)"; exit 0; fi
          node tests/e2e/axe.mjs
        env:
          BASE_URL: ${{ vars.DEPLOYED_BASE_URL }}
          A11Y_FAIL: ${{ vars.A11Y_FAIL }}

  nightly-load:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - name: Load test with budgets
        run: |
          if [ -z "${{ vars.DEPLOYED_BASE_URL }}" ]; then echo "Skipping LOAD (DEPLOYED_BASE_URL missing)"; exit 0; fi
          node scripts/load-test.mjs > load-results.txt
        env:
          BASE_URL: ${{ vars.DEPLOYED_BASE_URL }}
          TOKEN: ${{ secrets.OWNER_BEARER }}
          LOAD_BUDGET_STRICT: ${{ vars.LOAD_BUDGET_STRICT }}
      - name: Upload load results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: load-results
          path: |
            load-results.txt
            load-results.json
          if-no-files-found: ignore
      - name: Upload smoke artifacts (nightly)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-samples-nightly
          path: |
            smoke-samples/**
          if-no-files-found: ignore


